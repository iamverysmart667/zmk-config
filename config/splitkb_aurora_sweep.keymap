/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
  	flavor = "tap-preferred";
	tapping_term_ms = <175>;
};

/ { 
	combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
	  
     	default_layer {
	        bindings = <
	            &kp Q       &kp W       &kp F        &kp P       &kp B 	        &kp J    &kp L       &kp U        &kp Y       &kp QUOT 
	            &mt LCMD A  &mt LALT R  &mt LSHFT S  &mt LCTL T  &kp G 	        &kp M    &mt LCTL N  &mt LSHFT E  &mt LALT I  &mt LCMD O
	            &kp Z       &kp X       &kp C        &kp D       &kp V			&kp K    &kp H       &kp CMMA     &kp DOT     &kp SLASH
               				                         &lt 1 TAB   &lt 3 SPC      &kp RET  &lt 2 BSPC
	        >;
	    };

	    left_layer {
	        bindings = <
	            &kp BANG   &kp ATSN &kp HASH  &kp DLLR  &kp PRCT    		&kp CRRT   &kp LPRN  &kp AMPS   &kp SEMI   &kp RPRN 
                &kp TILDE  &kp BSLH &kp STAR  &kp COLN  &kp GRAVE 			&kp MINUS  &kp LBKT  &kp EQUAL  &kp COLON  &kp RBKT
	            &caps_word &trans   &trans    &trans    &trans    			&kp UNDER  &kp LBRC  &kp PLUS   &kp PIPE   &kp RBRC
	            			    		      &trans    &trans 			    &trans     &trans 
	        >;
	    };
	
     	right_layer {
	        bindings = <
	        &kp F3  &kp F6  &kp F9  &kp F12  &trans		    &kp NUM_6  &kp NUM_7  &kp NUM_8  &kp NUM_9   &kp NUM_0 
	        &kp F2  &kp F5  &kp F8  &kp F11  &trans 		&kp LEFT   &kp DOWN   &kp UP     &kp RIGHT   &kp DEL 
	        &kp F1	&kp F4 	&kp F7  &kp F10  &trans 	    &trans     &trans     &trans     &trans      &trans    
	        			      		&trans   &trans         &trans     &trans
	        >;
	    };
		
		num_layer {
			bindings = <
			&trans	&trans	&trans	&trans  &trans		&trans  &kp NUM_7  &kp NUM_8  &kp NUM_9  &trans 
	        &trans	&trans	&trans	&trans  &trans 		&trans  &kp NUM_4  &kp NUM_5  &kp NUM_6  &trans 
	        &trans	&trans	&trans	&trans  &trans 	    &trans  &kp NUM_1  &kp NUM_2  &kp NUM_3  &trans    
	        			      	    &trans  &trans      &trans  &kp NUM_0
			>;
		};
	
	    tri_layer {
	        bindings = <
	        &trans      &trans      &trans      &trans  &trans 		&trans  &trans        &trans        &trans      &trans
	        &trans      &trans      &trans      &trans  &trans 	    &trans  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE  &trans 
	        &bt BT_CLR  &bt BT_NXT  &bt BT_PRV  &tog 5  &trans   	&trans  &trans        &trans        &trans      &trans   
	        			 			     		&trans  &trans      &trans  &trans 
	        >;
	    };

	    gaming_layer {
	        bindings = <
	            &kp ESC     &kp Q       &kp W       &kp E       &kp R 	        &kp Y    &kp NUM_7  &kp NUM_8  &kp NUM_9  &kp TAB 
	            &kp LCTL    &kp A  		&kp S  		&kp D  	    &kp F 	        &kp B    &kp NUM_4  &kp NUM_5  &kp NUM_6  &trans 
	            &kp LSHFT   &kp Z       &kp X       &kp C       &kp V			&kp K    &kp NUM_1  &kp NUM_2  &kp NUM_3  &trans 
               				                        &mo 6       &kp SPC         &kp RET  &kp NUM_0
	        >;
	    };

		numrow_layer {
	        bindings = <
	            &trans     &kp NUM_1  &kp NUM_2  &kp NUM_3	 &kp NUM_4          &trans	   &trans	  &trans	 &trans      &trans
	            &trans	   &trans	  &trans	 &trans      &kp NUM_5  	    &trans	   &trans	  &trans	 &trans      &trans
	            &trans	   &trans	  &trans	 &trans      &trans       	    &trans	   &trans	  &trans	 &trans      &trans
               				      	             &trans      &trans             &trans	   &trans
	        >;
	    };
	};
};
